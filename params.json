{
  "name": "Hashiconf-napa-2016",
  "tagline": "HashiConf EU 2016 with Telemetry",
  "body": "# This is basis of the demo that Circonus was using at HashiConf NAPA 2016.\r\n\r\n<p>It is based based on kelseyhightower's awesome [Hashconf EU 2016 presentation] (https://github.com/kelseyhightower/hashiconf-eu-2016).\r\nWell, more than based on, a minor update to include telemetry data for each of the components (Consul, Nomad, Vault, as well as Fabio).</p>\r\n\r\n<p>Completely awesome example showing the power of Hashicorp's products, with a little bit of Circonus magic thrown in.</p>\r\n\r\n<p>So, if you follow the instructions below, you'll end up with a deployment that looks something like this:</p>\r\n![](http://www.vynjo.com/files/hashistack/hashistack_diagram.png)\r\n\r\n\r\n#Overview\r\nOnce you have completed the setup, you will have:\r\n<ul>\r\n<li>a 3 node server cluster (ns-1, ns-2, ns-3) running Consul, Nomad, and Vault servers. Each member of the cluster will AUTOMATICALLY create a corresponding set of Circonus metrics for each of the servers (Consul, Nomad, and Vault). These metrics will include the all important latency metrics (represented via histograms in Circonus), as well as basic information on CPU, Memory, and Disk utilization</li>\r\n<li>5 client machines with Nomad configured in agent mode, and, again, each of these machines will AUTOMATICALLY create a set of Circonus metrics with similar information as that of the Servers. </li>\r\n<li>A MySQL instance (to store the VAULT secrets)</li>\r\n<li>A load balancer (to give you one public IP)</li>\r\n</ul>\r\n\r\nNow that you have the basic infrastructure, you'll then launch two nomad jobs\r\n<ul>\r\n<li>Consul in agent mode</li>\r\n<li>Fabio, a sophisticated software load balancer</li>\r\n</ul>\r\n\r\nThese nomad jobs are configured to run a single allocation on each of the 5 clients, and each will produce a corresponding set of Circonus metrics\r\n\r\nFinally, you will launch a simple application called 'hashiapp' via one of the server cluster machines (ns-1), and you can experiment with starting and stopping an application, adjusting the allocation count (there are versions with 3, and 10 allocationssd) and again, viewing the\r\n\r\n## Prerequisites\r\n\r\n[Bootstrap the HashiStack on Google Compute Engine](hashistack.md)\r\n[Once this is done you'll see your metrics flowing into your Circonus account.]\r\n\r\nLogin into the controller node and checkout this repository.\r\n\r\n```\r\ngcloud compute ssh ns-1\r\n```\r\n\r\n```\r\ngit clone https://github.com/vynjo/hashiconf-napa-2016\r\n```\r\n\r\n```\r\ncd hashiconf-napa-2016\r\n```\r\n\r\n### Create the Hashiapp Policy and Token\r\n\r\n```\r\nexport VAULT_ADDR=http://ns-1:8200\r\n```\r\n\r\n```\r\nvault policy-write hashiapp vault/hashiapp-policy.hcl\r\n```\r\n\r\n```\r\nvault token-create \\\r\n  -policy=\"hashiapp\" \\\r\n  -display-name=\"hashiapp\"\r\n```\r\n\r\nEdit `jobs/hashiapp.nomad` job with TOKEN AND MYSQL address\r\n\r\n```\r\nenv {\r\n  VAULT_TOKEN = \"HASHIAPP_TOKEN\"\r\n  VAULT_ADDR = \"http://vault.service.consul:8200\"\r\n  HASHIAPP_DB_HOST = \"CLOUD_SQL:3306\"\r\n}\r\n```\r\n\r\n### Create the Hashiapp Secret\r\n\r\n```\r\nvault read mysql/creds/hashiapp\r\n```\r\n\r\n```\r\nvault write secret/hashiapp jwtsecret=secret\r\n```\r\n\r\n## Service Discovery with Consul\r\n\r\n```\r\nnomad plan jobs/consul.nomad\r\n```\r\n\r\n```\r\nnomad run jobs/consul.nomad\r\n```\r\n\r\n```\r\nnomad status consul\r\n```\r\n\r\n```\r\nconsul join nc-1 nc-2 nc-3 nc-4 nc-5\r\n```\r\n\r\n```\r\nconsul members\r\n```\r\n\r\n## Start Load Balancing with Fabio\r\nEdit the jobs/fabio.nomad file and replace CIRCONUS_API_TOKEN with your Circonus api token\r\n\r\n```\r\nnomad run jobs/fabio.nomad\r\n```\r\n\r\n```\r\nnomad status fabio\r\n```\r\n\r\n## Hashiapp Job\r\n\r\nSubmit the hashiapp service job.\r\n\r\n```\r\nnomad run jobs/hashiapp-v1-c3.nomad\r\n```\r\n\r\n```\r\nnomad status hashiapp\r\n```\r\n\r\n#### Viewing Logs\r\n\r\n```\r\nnomad fs -job hashiapp alloc/logs/hashiapp.stderr.0\r\nnomad fs -job hashiapp alloc/logs/hashiapp.stdout.0\r\n```\r\n\r\n#### Send Traffic\r\n\r\n```\r\ncurl -H \"Host: hashiapp.com\" http://<loadbalancer-ip>:9999/version\r\n```\r\nor\r\n```\r\nwhile true; do curl -H \"Host: hashiapp.com\" http://<loadbalancer-ip>:9999/version; sleep 1; done\r\n```\r\n\r\n### Scaling Up\r\n\r\nRun the `jobs/nomad run jobs/hashiapp-v1-c10.nomad` which starts 10 allocations instead of 3\r\n\r\n```\r\nnomad run jobs/hashiapp-v1-c10.nomad\r\n\r\n```\r\nThen you can switch to v2 by running\r\n```\r\nnomad run jobs/hashiapp-v2-c10.nomad\r\n\r\n```\r\n\r\n\r\n### Rolling Upgrades\r\n\r\nChange up the jobs by running `jobs/hashiapp-v1-c3.nomad` or `jobs/hashiapp-v2-c3.nomad`\r\n\r\nor via your local machine:\r\n```\r\ngcloud compute ssh ns-1 nomad run hashiconf-napa-2016/jobs/hashiapp-v2-c10.nomad\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}